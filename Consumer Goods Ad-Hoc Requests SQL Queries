Request 1: Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

select distinct(market) from dim_customer 
where customer = 'Atliq Exclusive' and
region = 'APAC';


Request 2: What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, unique_products_2020, unique_products_2021, percentage_chg

with cte1 as 
(select count(distinct(product_code)) as unique_products_2020 
from fact_sales_monthly
where fiscal_year = 2020),
cte2 as
(select count(distinct(product_code)) as unique_products_2021 
from fact_sales_monthly
where fiscal_year = 2021)
select unique_products_2020, unique_products_2021,
round((unique_products_2021-unique_products_2020)*100/unique_products_2020,2) as percentage_chg
from cte1, cte2;


Request 3: Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields, segment, product_count

select count(distinct(product_code)) as product_count, segment 
from dim_product
group by segment
order by product_count desc;



Request 4: Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, segment, product_count_2020, product_count_2021, difference

with cte1 as 
(select segment, count(distinct(fs.product_code)) as product_count_2020 
from fact_sales_monthly as fs
join dim_product dp on fs.product_code = dp.product_code
where fiscal_year = 2020
group by segment),
cte2 as
(select segment, count(distinct(fs.product_code)) as product_count_2021 
from fact_sales_monthly as fs
join dim_product dp on fs.product_code = dp.product_code
where fiscal_year = 2021
group by segment)
select segment, product_count_2020, product_count_2021,
(product_count_2021-product_count_2020) as difference
from cte1
join cte2
using (segment)
order by difference desc;


Request 5: Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, product_code, product, manufacturing_cost

select dp.product_code, dp.product, fc.manufacturing_cost from dim_product dp
join fact_manufacturing_cost fc on dp.product_code = fc.product_code 
where manufacturing_cost in (
			( select min(manufacturing_cost) from fact_manufacturing_cost),
            (select max(manufacturing_cost) from fact_manufacturing_cost)
            );


Request 6: Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields, customer_code, customer, average_discount_percentage

select fd.customer_code, dc.customer, round(avg(pre_invoice_discount_pct),2) as average_discount_percentage
from fact_pre_invoice_deductions fd
join dim_customer dc on fd.customer_code = dc.customer_code
where fiscal_year = 2021 and market = 'India'
group by fd.customer_code, dc.customer
order by average_discount_percentage desc
limit 5;


Request 7: Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high-performing months and take strategic decisions. The final report contains these columns: Month, Year, Gross sales Amount

select concat(monthname(sm.date), '(', YEAR(sm.date), ')') as Month, sm.fiscal_year, round(sum(gross_price*sold_quantity),2) as Gross_sales_Amount
from fact_sales_monthly sm 
join fact_gross_price gp on sm.product_code = gp.product_code
join dim_customer dc on sm.customer_code = dc.customer_code
where customer = 'Atliq Exclusive'
group by Month, fiscal_year
order by fiscal_year desc;


Request 8: In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity, Quarter total_sold_quantity

select
CASE
    WHEN date between '2019-09-01' and '2019-11-30' THEN 'Q1'
    WHEN date between '2019-12-01' and '2020-02-29' THEN 'Q2'
    WHEN date between '2020-03-01' and '2020-05-31' THEN 'Q3'
    WHEN date between '2020-06-01' and '2020-08-31' THEN 'Q4'
END AS quarters,
sum(sold_quantity) as total_sold_quantity
from fact_sales_monthly
where fiscal_year = 2020
group by quarters
order by total_sold_quantity desc;


Request 9: Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields, channel, gross_sales_mln, percentage

with cte1 as (
select round(sum(sm.sold_quantity*gp.gross_price/1000000),2) as gross_sales_mln, channel from dim_customer dc
join fact_sales_monthly sm on dc.customer_code = sm.customer_code
join fact_gross_price gp on sm.product_code = gp.product_code
where sm.fiscal_year = 2021
group by channel)
select channel, gross_sales_mln, concat(round((gross_sales_mln*100)/sum(gross_sales_mln) over(),2), '%') as percentage
from cte1
order by percentage desc;


Request 10: Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields, division, product_code, product, total_sold_quantity, rank_order

with cte as (
select division, dp.product_code, product, sum(sold_quantity) as total_sold_quantity,
rank() over(partition by division order by sum(sold_quantity) desc) as rank_order from dim_product dp
join fact_sales_monthly sm on dp.product_code = sm.product_code
where fiscal_year = 2021
group by division, dp.product_code, product
)
select * from cte
where rank_order in (1,2,3);


		
